{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/context/auth-context.js","places/pages/NewPlace.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["logoutTimer","Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","process","REACT_APP_ASSET_URL","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","REACT_APP_BACKEND_URL","users","fetchUsers","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","console","log","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","login","logout","NewPlace","auth","useContext","title","description","address","inputHandler","history","useHistory","placeSubmitHandler","formData","FormData","append","Authorization","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","frameBorder","scrolling","marginHeight","marginWidth","coordinates","lat","toString","lng","creatorId","PlaceList","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","input","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","App","routes","setToken","tokenExp","setTokenExp","setUserId","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.dddb7911.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExp, setTokenExp] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60); // 1hr in future\r\n    setTokenExp(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      }),\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setTokenExp(null);\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExp) {\r\n      const remainingTime = tokenExp.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExp]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    )\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration),\r\n      );\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\r\n\r\nimport UserItem from './UserItem';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map(user => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) throw new Error(responseData.message);\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users'\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />};\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH',\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n        placeholder={props.placeholder}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) continue;\r\n\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    console.log('inputHandler activated...', id);\r\n\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\n\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', formState.inputs.title.value);\r\n      formData.append('description', formState.inputs.description.value);\r\n      formData.append('address', formState.inputs.address.value);\r\n      formData.append('image', formState.inputs.image.value);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + '/places',\r\n        'POST',\r\n        formData,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      );\r\n      history.push('/');\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters)\"\r\n          onInput={inputHandler}\r\n          placeholder=\"Please enter a valid description (at least 5 characters)\"\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          center\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\n// import Map from '../../shared/components/UIElements/Map';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nimport './PlaceItem.css';\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => setShowConfirmModal(true);\r\n\r\n  const cancelDeleteHandler = () => setShowConfirmModal(false);\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `places/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <iframe\r\n            title=\"map\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"no\"\r\n            marginHeight=\"0\"\r\n            marginWidth=\"0\"\r\n            src={\r\n              'https://maps.google.com/maps?q=' +\r\n              props.coordinates.lat.toString() +\r\n              ',' +\r\n              props.coordinates.lng.toString() +\r\n              '&t=&z=15&ie=UTF8&iwloc=&output=embed'\r\n            }\r\n          ></iframe>\r\n          <script\r\n            type=\"text/javascript\"\r\n            src=\"https://embedmaps.com/google-maps-authorization/script.js?id=5a33be79e53caf0a07dfec499abf84b7b481f165\"\r\n          ></script>\r\n          {/* <Map center={props.coordinates} zoom={16} /> */}\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card>\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React, { useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceList.css';\r\n\r\n// props = loadedPlaces array\r\nconst PlaceList = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          {auth.isLoggedIn && <Button to=\"/places/new\">Share Place</Button>}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {\r\n        setLoadedPlaces([]);\r\n      }\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n      {!isLoading && !loadedPlaces && (\r\n        <div className=\"center\">No Places found for user!</div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    console.log('formState.inputs: ', formState.inputs);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        'PATCH',\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      );\r\n      history.push('/' + auth.userId + '/places');\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <LoadingSpinner />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React, { useState, useContext } from 'react';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from '../../shared/util/validators';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n\r\n        false\r\n      );\r\n    }\r\n\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(formState.input);\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {\r\n        // error handled in custom hook\r\n      }\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('email', formState.inputs.email.value);\r\n        formData.append('name', formState.inputs.name.value);\r\n        formData.append('password', formState.inputs.password.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\r\n          'POST',\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {\r\n        //\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE]}\r\n              errorText=\"Please enter a name\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"Email Address\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a password (at least 6 characters).\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\n// import Button from '../FormElements/Button';\n\nimport './NavLinks.css';\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">LOGIN</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          {/* <button onClick={auth.logout}>LOGOUT</button> */}\n          <NavLink to=\"/auth\" onClick={auth.logout}>\n            LOGOUT\n          </NavLink>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport Users from './user/pages/Users';\r\nimport NewPlace from './places/pages/NewPlace';\r\nimport UserPlaces from './places/pages/UserPlaces';\r\nimport UpdatePlace from './places/pages/UpdatePlace';\r\nimport Auth from './user/pages/Auth';\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport { AuthContext } from './shared/context/auth-context';\r\nimport { useAuth } from './shared/hooks/auth-hook';\r\n\r\nconst App = () => {\r\n  const { token, login, logout, userId } = useAuth();\r\n\r\n  let routes;\r\n\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\">\r\n          <UpdatePlace />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout,\r\n      }}\r\n    >\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>{routes}</main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}