{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExp","setTokenExp","setUserId","useCallback","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.71547293.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExp, setTokenExp] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60); // 1hr in future\r\n    setTokenExp(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      }),\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setTokenExp(null);\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExp) {\r\n      const remainingTime = tokenExp.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExp]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    )\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration),\r\n      );\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\n// import Button from '../FormElements/Button';\n\nimport './NavLinks.css';\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">LOGIN</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          {/* <button onClick={auth.logout}>LOGOUT</button> */}\n          <NavLink to=\"/auth\" onClick={auth.logout}>\n            LOGOUT\n          </NavLink>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\n// import Users from './user/pages/Users';\r\n// import NewPlace from './places/pages/NewPlace';\r\n// import UserPlaces from './places/pages/UserPlaces';\r\n// import UpdatePlace from './places/pages/UpdatePlace';\r\n// import Auth from './user/pages/Auth';\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport { AuthContext } from './shared/context/auth-context';\r\nimport { useAuth } from './shared/hooks/auth-hook';\r\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\r\n\r\nconst Users = React.lazy(() => import('./user/pages/Users'));\r\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\r\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\r\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\r\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\r\n\r\nconst App = () => {\r\n  const { token, login, logout, userId } = useAuth();\r\n\r\n  let routes;\r\n\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\">\r\n          <UpdatePlace />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout,\r\n      }}\r\n    >\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>\r\n          <Suspense\r\n            fallback={\r\n              <div className=\"center\">\r\n                <LoadingSpinner />\r\n              </div>\r\n            }\r\n          >\r\n            {routes}\r\n          </Suspense>\r\n        </main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}