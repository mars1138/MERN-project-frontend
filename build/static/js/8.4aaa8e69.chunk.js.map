{"version":3,"sources":["shared/components/UIElements/Card.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","REACT_APP_BACKEND_URL","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","title","width","height","frameBorder","scrolling","marginHeight","marginWidth","src","coordinates","lat","toString","lng","type","inverse","danger","LoadingSpinner","asOverlay","REACT_APP_ASSET_URL","image","alt","description","userId","creatorId","to","PlaceList","items","length","isLoggedIn","map","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","useEffect","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/8.4aaa8e69.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\n// import Map from '../../shared/components/UIElements/Map';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nimport './PlaceItem.css';\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => setShowConfirmModal(true);\r\n\r\n  const cancelDeleteHandler = () => setShowConfirmModal(false);\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `places/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <iframe\r\n            title=\"map\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"no\"\r\n            marginHeight=\"0\"\r\n            marginWidth=\"0\"\r\n            src={\r\n              'https://maps.google.com/maps?q=' +\r\n              props.coordinates.lat.toString() +\r\n              ',' +\r\n              props.coordinates.lng.toString() +\r\n              '&t=&z=15&ie=UTF8&iwloc=&output=embed'\r\n            }\r\n          ></iframe>\r\n          <script\r\n            type=\"text/javascript\"\r\n            src=\"https://embedmaps.com/google-maps-authorization/script.js?id=5a33be79e53caf0a07dfec499abf84b7b481f165\"\r\n          ></script>\r\n          {/* <Map center={props.coordinates} zoom={16} /> */}\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card>\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React, { useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceList.css';\r\n\r\n// props = loadedPlaces array\r\nconst PlaceList = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          {auth.isLoggedIn && <Button to=\"/places/new\">Share Place</Button>}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {\r\n        setLoadedPlaces([]);\r\n      }\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n      {!isLoading && !loadedPlaces && (\r\n        <div className=\"center\">No Places found for user!</div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}